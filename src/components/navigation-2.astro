---
import { Icon } from "astro-icon/components";
import ThemeSwitcher from "~/components/theme-switcher.astro";
import type { NavItem } from "~/types";
import { Image } from "astro:assets";

import Logo from "~/assets/logo.png";

const navItems: Array<NavItem> = [
  { title: "Home", url: "/"},
  { title: "The Studio", url: "studio"},
  { title: "Segula Tech", url: "tech" },
  { title: "Contact Us", url: "contact" },
];
---






<header id="page-header" class="fixed top-0 z-20 flex w-full items-center justify-between px-8 py-4 text-white">
  <!-- Logo -->
  <a class="flex items-center gap-3 hover:!text-default" href="/">
    <!-- <h1 class="sr-only">Astro</h1> -->
    <Image src={Logo} alt="Segula Global Logo" class="logo" />
    <!-- <Icon name="logomark" class="size-10" /> -->
    <!-- <Icon name="wordmark" class="hidden h-4 sm:block" /> -->
  </a>


  <div>
    <div class="flex items-center gap-6">
      <nav class="hidden sm:block">
        <ul class="flex items-center gap-6">
          {
            navItems.map(({ title, url }) => (
              <li>
                <a class="text-sm" href={url}>
                  {title}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <button id="open-nav-button" type="button" class="nav-btn sm:hidden" aria-label="Navigation">
        <Icon name="mdi:menu" class="size-8" />
      </button>
      <!-- <ThemeSwitcher /> -->
    </div>

    <div id="menu-modal" class="modal hidden" aria-hidden="true">
      <div class="nav-menu">
        <div class="space-y-4" role="dialog" aria-modal="true">
          <header class="text-right">
            <button id="close-nav-button" type="button" class="nav-btn" aria-label="Close navigation">
              <Icon name="mdi:close" class="size-8" />
            </button>
          </header>
          <div class="flex justify-center">
            <Image src={Logo} alt="Segula Global Logo" class="logo" />
          </div>
          <nav>
            <ul class="nav-list flex flex-col">
              {
                navItems.map(({ title, url }) => (
                  <li class="nav-item">
                    <a class="nav-link block py-4 text-center text-xl" href={url}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>








<!-- ============= JS =============== -->
<script>
  import MicroModal from "micromodal";
  import invariant from "tiny-invariant";

  const menuModalId = "menu-modal";

  const header = document.querySelector("#page-header") as HTMLElement;
  const page = document.documentElement;
  const menu = document.querySelector(`#${menuModalId} ul`);
  const openNavButton = document.querySelector("#open-nav-button");
  const closeNavButton = document.querySelector("#close-nav-button");

  invariant(header, "header should not be null");
  invariant(menu, "menu should not be null");
  invariant(openNavButton, "openNavButton should not be null");
  invariant(closeNavButton, "closeNavButton should not be null");

  const openMenu = () => {
    // Open the modal with MicroModal and add the 'show' class for the transition
    MicroModal.show(menuModalId, { disableScroll: true });
    document.getElementById(menuModalId).classList.add('show');
  };

  const closeMenu = () => {
    // Remove the 'show' class to trigger the transition
    document.getElementById(menuModalId).classList.remove('show');

    // Add a delay to ensure the transition finishes before closing the modal
    setTimeout(() => {
      MicroModal.close(menuModalId);
    }, 300); // Matches the duration of the CSS transition
  };

  openNavButton.addEventListener("click", openMenu);
  closeNavButton.addEventListener("click", closeMenu);

  document.addEventListener("scroll", () => {
    const d = page.clientHeight - page.scrollTop - header.offsetHeight;
    header.classList.toggle("fixed-header", d < 0);
  }
);

  menu.addEventListener("click", (event) => {
    if ((event.target as HTMLElement).tagName === "A") {
      closeMenu();
    }
  });

</script>





<noscript>
  <style>
    #open-nav-button {
      /* display: none; */
      opacity: 0;
    }
    
  </style>
</noscript>














<!-- ================== CSS ================= -->
<style lang="scss">
  .logo {
    width: 150px;
    height: auto;
  }

  #page-header {
    // border-bottom: 1px solid #dfd989a9;
    color: #fff;
    background-color: #008764;
    transition: .2s;
  }

  .fixed-header {
    // @apply fixed bottom-auto top-0;
    border-bottom: 1px solid #dfd989a9;
    // color: #fff;
    // background-color: red;
    transition: .2s;
  }
  .modal.is-open {
    @apply block;
  }

  .nav-list {
    width: 100%;
    height: 100%;
    text-align: center;
    margin-top: 3rem;
  }
  .nav-menu {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 2rem 1.5rem;
    background-color: rgba(19, 19, 19, 0.74);
    backdrop-filter: blur(10px);
    transition: .4s;
  }
  .nav-link {
    display: inline-block;
    padding: 1rem 2.5rem;
    background-color: transparent;
    border: 1px solid #fff;
    margin-bottom: 1rem;
    border-radius: .5rem;
    transition: .2s;

    &:hover {
      background-color: #fff;
      color: var(--clr-green-dark);
    }
  }
</style>
